<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="63" failures="3" skipped="0" tests="95" time="38.770" timestamp="2025-06-07T04:05:55.794960+00:00" hostname="ip-172-31-47-19"><testcase classname="tests.test_auth.TestAuthRegistration" name="test_register_user_success" time="0.755" /><testcase classname="tests.test_auth.TestAuthRegistration" name="test_register_duplicate_email" time="0.364" /><testcase classname="tests.test_auth.TestAuthRegistration" name="test_register_invalid_email" time="0.005" /><testcase classname="tests.test_auth.TestAuthRegistration" name="test_register_weak_password" time="0.005" /><testcase classname="tests.test_auth.TestAuthRegistration" name="test_register_missing_fields" time="0.005" /><testcase classname="tests.test_auth.TestAuthLogin" name="test_login_success" time="0.891" /><testcase classname="tests.test_auth.TestAuthLogin" name="test_login_wrong_email" time="0.008"><failure message="AssertionError: assert 'Invalid credentials' in 'Incorrect email or password'">tests/test_auth.py:121: in test_login_wrong_email
    assert "Invalid credentials" in response.json()["detail"]
E   AssertionError: assert 'Invalid credentials' in 'Incorrect email or password'</failure></testcase><testcase classname="tests.test_auth.TestAuthLogin" name="test_login_wrong_password" time="0.367"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269158328738, 'test@example.com', '$2b$12$ErfJuKPqxpqSs9dgIboyIOPVXug6tfv93p6oOFIA/JYmxIzz7ZzqS', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:05:58.398359', 0, None, '2025-06-07 04:05:58.398368', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269158328738, 'test@example.com', '$2b$12$ErfJuKPqxpqSs9dgIboyIOPVXug6tfv93p6oOFIA/JYmxIzz7ZzqS', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:05:58.398359', 0, None, '2025-06-07 04:05:58.398368', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_auth.TestAuthLogin" name="test_login_inactive_user" time="0.726"><failure message="AssertionError: assert 'account is disabled' in 'Account is disabled'">tests/test_auth.py:154: in test_login_inactive_user
    assert "account is disabled" in response.json()["detail"]
E   AssertionError: assert 'account is disabled' in 'Account is disabled'</failure></testcase><testcase classname="tests.test_auth.TestAuthLogin" name="test_login_invalid_format" time="0.005" /><testcase classname="tests.test_auth.TestAuthProfile" name="test_get_profile_success" time="0.350"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269159446010, 'test@example.com', '$2b$12$avBQSjDIU1QqrVY/7LF1OuOW0lxVpLEKVwLIqxdyYX6OZ.tDuJOba', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:05:59.994681', 0, None, '2025-06-07 04:05:59.994690', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269159446010, 'test@example.com', '$2b$12$avBQSjDIU1QqrVY/7LF1OuOW0lxVpLEKVwLIqxdyYX6OZ.tDuJOba', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:05:59.994681', 0, None, '2025-06-07 04:05:59.994690', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_auth.TestAuthProfile" name="test_get_profile_no_token" time="0.005" /><testcase classname="tests.test_auth.TestAuthProfile" name="test_get_profile_invalid_token" time="0.006" /><testcase classname="tests.test_auth.TestAuthPasswordReset" name="test_forgot_password_existing_email" time="0.368"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269160834449, 'test@example.com', '$2b$12$h3hX1XqDiZIp0jIMLIk09OaUiblkdBI4PRGy6JlUplYmnfZNaDzgm', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:00.874124', 0, None, '2025-06-07 04:06:00.874133', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269160834449, 'test@example.com', '$2b$12$h3hX1XqDiZIp0jIMLIk09OaUiblkdBI4PRGy6JlUplYmnfZNaDzgm', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:00.874124', 0, None, '2025-06-07 04:06:00.874133', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_auth.TestAuthPasswordReset" name="test_forgot_password_non_existing_email" time="0.009" /><testcase classname="tests.test_auth.TestAuthPasswordReset" name="test_reset_password_invalid_token" time="0.006" /><testcase classname="tests.test_auth.TestAuthTokenRefresh" name="test_refresh_token_success" time="0.353"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269161131573, 'test@example.com', '$2b$12$yb.4MVMdU4bLBIRZ8IYL8ev55w6R7J5mwqpo1iSL6KtaRf/ECWLoa', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:01.745703', 0, None, '2025-06-07 04:06:01.745712', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269161131573, 'test@example.com', '$2b$12$yb.4MVMdU4bLBIRZ8IYL8ev55w6R7J5mwqpo1iSL6KtaRf/ECWLoa', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:01.745703', 0, None, '2025-06-07 04:06:01.745712', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_auth.TestAuthTokenRefresh" name="test_refresh_token_invalid" time="0.007" /><testcase classname="tests.test_auth.TestAuthChangePassword" name="test_change_password_success" time="0.368"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269162221151, 'test@example.com', '$2b$12$mnwEcHXw9uLu8.VeQDAcJOr7zwsGMfoztmbScWZ9FVQyVNGDKQi6G', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:02.609934', 0, None, '2025-06-07 04:06:02.609943', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269162221151, 'test@example.com', '$2b$12$mnwEcHXw9uLu8.VeQDAcJOr7zwsGMfoztmbScWZ9FVQyVNGDKQi6G', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:02.609934', 0, None, '2025-06-07 04:06:02.609943', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_auth.TestAuthChangePassword" name="test_change_password_wrong_current" time="0.360"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269163233168, 'test@example.com', '$2b$12$NJgLHzvTqPbiVe3XsTFoFeglQ.acw/.b6hbhfkpGX.2mVCsW0A12S', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:03.463949', 0, None, '2025-06-07 04:06:03.463958', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269163233168, 'test@example.com', '$2b$12$NJgLHzvTqPbiVe3XsTFoFeglQ.acw/.b6hbhfkpGX.2mVCsW0A12S', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:03.463949', 0, None, '2025-06-07 04:06:03.463958', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_auth.TestAuthChangePassword" name="test_change_password_no_auth" time="0.005" /><testcase classname="tests.test_auth.TestAuthLogout" name="test_logout_success" time="0.375"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269163917945, 'test@example.com', '$2b$12$dmfd.YyWTxhsSUb1akGn8.OKVQZTHc21Bd.HqttF6Jmj9cDIrU6ay', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:04.364186', 0, None, '2025-06-07 04:06:04.364196', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269163917945, 'test@example.com', '$2b$12$dmfd.YyWTxhsSUb1akGn8.OKVQZTHc21Bd.HqttF6Jmj9cDIrU6ay', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:04.364186', 0, None, '2025-06-07 04:06:04.364196', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_auth.TestAuthLogout" name="test_logout_no_auth" time="0.007" /><testcase classname="tests.test_companies.TestCompanyRegistration" name="test_register_company_with_user_success" time="0.374" /><testcase classname="tests.test_companies.TestCompanyRegistration" name="test_register_supplier_company" time="0.376" /><testcase classname="tests.test_companies.TestCompanyRegistration" name="test_register_both_type_company" time="0.377" /><testcase classname="tests.test_companies.TestCompanyDataStructure" name="test_company_creation" time="0.006" /><testcase classname="tests.test_companies.TestCompanyDataStructure" name="test_company_user_association" time="0.357"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269166752269, 'test@example.com', '$2b$12$9wDlNQlRmZ1k1AkvE/RF7uVyVcYyXcuoiFbyRd944zXtfAhxNvXgO', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:06.382267', 0, None, '2025-06-07 04:06:06.382277', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269166752269, 'test@example.com', '$2b$12$9wDlNQlRmZ1k1AkvE/RF7uVyVcYyXcuoiFbyRd944zXtfAhxNvXgO', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:06.382267', 0, None, '2025-06-07 04:06:06.382277', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_companies.TestCompanyDataStructure" name="test_company_json_fields" time="0.004" /><testcase classname="tests.test_companies.TestCompanyValidation" name="test_invalid_company_type" time="0.010" /><testcase classname="tests.test_companies.TestCompanyValidation" name="test_missing_company_data" time="0.009" /><testcase classname="tests.test_companies.TestCompanyValidation" name="test_duplicate_business_license" time="0.384" /><testcase classname="tests.test_companies.TestCompanyRoles" name="test_admin_role_creation" time="0.351"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269167292163, 'test@example.com', '$2b$12$9QQkNxlGn4.aairnOzDe9uWkV8XCrGTlPOLD4d8sukjZt/ywN7P9y', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:07.658327', 0, None, '2025-06-07 04:06:07.658336', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269167292163, 'test@example.com', '$2b$12$9QQkNxlGn4.aairnOzDe9uWkV8XCrGTlPOLD4d8sukjZt/ywN7P9y', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:07.658327', 0, None, '2025-06-07 04:06:07.658336', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_companies.TestCompanyRoles" name="test_purchaser_role_creation" time="0.350"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269168552892, 'test@example.com', '$2b$12$/H23Bdy1iMbzLPc2cpYtYO9p4byTY2vuob9bSeUsJasl1Bi0IhHAq', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:08.501181', 0, None, '2025-06-07 04:06:08.501190', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269168552892, 'test@example.com', '$2b$12$/H23Bdy1iMbzLPc2cpYtYO9p4byTY2vuob9bSeUsJasl1Bi0IhHAq', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:08.501181', 0, None, '2025-06-07 04:06:08.501190', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_companies.TestCompanyRoles" name="test_finance_role_creation" time="0.350"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269168760377, 'test@example.com', '$2b$12$pX8X59c/lPE1trlwdlcOqOCzXBlh4XV0ezlL76RSGEiisXUrkwJti', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:09.340511', 0, None, '2025-06-07 04:06:09.340520', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269168760377, 'test@example.com', '$2b$12$pX8X59c/lPE1trlwdlcOqOCzXBlh4XV0ezlL76RSGEiisXUrkwJti', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:09.340511', 0, None, '2025-06-07 04:06:09.340520', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_companies.TestCompanyRoles" name="test_viewer_role_creation" time="0.350"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269169542484, 'test@example.com', '$2b$12$Pmsjw8xQtJ1YgKDaIzInZ.RIvIVh0JGQrj3.Yy6icbj3Far2zcvQ6', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:10.217366', 0, None, '2025-06-07 04:06:10.217375', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269169542484, 'test@example.com', '$2b$12$Pmsjw8xQtJ1YgKDaIzInZ.RIvIVh0JGQrj3.Yy6icbj3Far2zcvQ6', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:10.217366', 0, None, '2025-06-07 04:06:10.217375', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_companies.TestCompanyTypes" name="test_supplier_company_features" time="0.005" /><testcase classname="tests.test_companies.TestCompanyTypes" name="test_buyer_company_features" time="0.004" /><testcase classname="tests.test_companies.TestCompanyTypes" name="test_both_type_company_features" time="0.003" /><testcase classname="tests.test_example" name="test_hello_world" time="0.001" /><testcase classname="tests.test_orders.TestOrderCreation" name="test_create_order_success" time="0.351"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269170166723, 'test@example.com', '$2b$12$gxRiCRh5VVtxhRzQEmFfY.bTb4njDCml1kIWIYlfNzbKAyssIFSO2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:11.084947', 0, None, '2025-06-07 04:06:11.084956', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269170166723, 'test@example.com', '$2b$12$gxRiCRh5VVtxhRzQEmFfY.bTb4njDCml1kIWIYlfNzbKAyssIFSO2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:11.084947', 0, None, '2025-06-07 04:06:11.084956', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderCreation" name="test_create_order_multiple_products" time="0.349"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269171863657, 'test@example.com', '$2b$12$Wu8tWmReorQ6mHy9PUkVPuI5uCm4JloOdczt2NY2uEU1A.EHY9RZu', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:11.925747', 0, None, '2025-06-07 04:06:11.925756', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269171863657, 'test@example.com', '$2b$12$Wu8tWmReorQ6mHy9PUkVPuI5uCm4JloOdczt2NY2uEU1A.EHY9RZu', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:11.925747', 0, None, '2025-06-07 04:06:11.925756', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderCreation" name="test_create_order_insufficient_stock" time="0.351"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269172124436, 'test@example.com', '$2b$12$2PMUdyq/1V1S0gZv5WiV1e6LQN31uL./NsTtknuos47N7OM/YNipS', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:12.757897', 0, None, '2025-06-07 04:06:12.757907', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269172124436, 'test@example.com', '$2b$12$2PMUdyq/1V1S0gZv5WiV1e6LQN31uL./NsTtknuos47N7OM/YNipS', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:12.757897', 0, None, '2025-06-07 04:06:12.757907', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderCreation" name="test_create_order_non_existent_product" time="0.358"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269173923133, 'test@example.com', '$2b$12$7ZZPYFKKa6fT1kwMqKYY4u5GXA5Z8Uf7.E0EOmQ/WniRtUUcmMiWO', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:13.601482', 0, None, '2025-06-07 04:06:13.601491', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269173923133, 'test@example.com', '$2b$12$7ZZPYFKKa6fT1kwMqKYY4u5GXA5Z8Uf7.E0EOmQ/WniRtUUcmMiWO', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:13.601482', 0, None, '2025-06-07 04:06:13.601491', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderCreation" name="test_create_order_unauthorized" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_orders.TestOrderCreation" name="test_create_order_invalid_quantity" time="0.400"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269174632309, 'test@example.com', '$2b$12$LQJ.Jhjb9O.GDOspCVLeOOyTmETzH9FCFMGAU9hWCNjq1YPFfUS.2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:14.654872', 0, None, '2025-06-07 04:06:14.654879', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269174632309, 'test@example.com', '$2b$12$LQJ.Jhjb9O.GDOspCVLeOOyTmETzH9FCFMGAU9hWCNjq1YPFfUS.2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:14.654872', 0, None, '2025-06-07 04:06:14.654879', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderRetrieval" name="test_get_orders" time="0.357"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269175861601, 'test@example.com', '$2b$12$9TIijyq6pbSHCPX5arud5.kV0thM3I.w/BSKDT65mdzHJN27nQoGm', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:15.520083', 0, None, '2025-06-07 04:06:15.520093', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269175861601, 'test@example.com', '$2b$12$9TIijyq6pbSHCPX5arud5.kV0thM3I.w/BSKDT65mdzHJN27nQoGm', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:15.520083', 0, None, '2025-06-07 04:06:15.520093', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderRetrieval" name="test_get_orders_with_pagination" time="0.363"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269176547506, 'test@example.com', '$2b$12$KepWQOsrWd/7Jnaq3yTEeOO3QG3flFWXWAIZ7A3gOz1BdMmYEAhdK', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:16.479900', 0, None, '2025-06-07 04:06:16.479910', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269176547506, 'test@example.com', '$2b$12$KepWQOsrWd/7Jnaq3yTEeOO3QG3flFWXWAIZ7A3gOz1BdMmYEAhdK', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:16.479900', 0, None, '2025-06-07 04:06:16.479910', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderRetrieval" name="test_get_order_by_id" time="0.350"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269177114439, 'test@example.com', '$2b$12$6JzKqtylUPMfXDTtFx0IPO3zB8mPk7cMLvWcZyal6N0y0BwmK8Ce2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:17.386829', 0, None, '2025-06-07 04:06:17.386838', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269177114439, 'test@example.com', '$2b$12$6JzKqtylUPMfXDTtFx0IPO3zB8mPk7cMLvWcZyal6N0y0BwmK8Ce2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:17.386829', 0, None, '2025-06-07 04:06:17.386838', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderRetrieval" name="test_get_order_not_found" time="0.349"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269177376720, 'test@example.com', '$2b$12$QZm.7vXR1jivi418lg0c1esRMiFv3twZFOqFEA14LrXIkZ6W/9iSi', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:18.252226', 0, None, '2025-06-07 04:06:18.252236', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269177376720, 'test@example.com', '$2b$12$QZm.7vXR1jivi418lg0c1esRMiFv3twZFOqFEA14LrXIkZ6W/9iSi', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:18.252226', 0, None, '2025-06-07 04:06:18.252236', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderRetrieval" name="test_get_order_unauthorized" time="0.353"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269178461032, 'test@example.com', '$2b$12$X5msco1Q8gQUSrv9R2FumuWNQyBH0wgYVGkIMirtDfqdgLjRatVFm', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:19.121706', 0, None, '2025-06-07 04:06:19.121715', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269178461032, 'test@example.com', '$2b$12$X5msco1Q8gQUSrv9R2FumuWNQyBH0wgYVGkIMirtDfqdgLjRatVFm', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:19.121706', 0, None, '2025-06-07 04:06:19.121715', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderRetrieval" name="test_get_order_wrong_user" time="0.001"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py, line 293&#10;      def test_get_order_wrong_user(self, client: TestClient, supplier_auth_headers: dict, test_order: Order):&#10;E       fixture 'supplier_auth_headers' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_order, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py:293&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py, line 293
      def test_get_order_wrong_user(self, client: TestClient, supplier_auth_headers: dict, test_order: Order):
E       fixture 'supplier_auth_headers' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_order, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py:293</error></testcase><testcase classname="tests.test_orders.TestOrderStatusManagement" name="test_update_order_status_supplier" time="0.001"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py, line 304&#10;      def test_update_order_status_supplier(self, client: TestClient, supplier_auth_headers: dict, test_order: Order):&#10;E       fixture 'supplier_auth_headers' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_order, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py:304&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py, line 304
      def test_update_order_status_supplier(self, client: TestClient, supplier_auth_headers: dict, test_order: Order):
E       fixture 'supplier_auth_headers' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_order, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py:304</error></testcase><testcase classname="tests.test_orders.TestOrderStatusManagement" name="test_update_order_status_invalid_transition" time="0.001"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py, line 319&#10;      def test_update_order_status_invalid_transition(self, client: TestClient, supplier_auth_headers: dict, test_order: Order, db_session: Session):&#10;E       fixture 'supplier_auth_headers' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_order, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py:319&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py, line 319
      def test_update_order_status_invalid_transition(self, client: TestClient, supplier_auth_headers: dict, test_order: Order, db_session: Session):
E       fixture 'supplier_auth_headers' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_order, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py:319</error></testcase><testcase classname="tests.test_orders.TestOrderStatusManagement" name="test_cancel_order_buyer" time="0.354"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269179523918, 'test@example.com', '$2b$12$RKLcDMJsdAJe.yyjyJ9RLuZ/9XnYkR5qhiB.T1gQnphrt0PmnWLsO', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:19.971181', 0, None, '2025-06-07 04:06:19.971190', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269179523918, 'test@example.com', '$2b$12$RKLcDMJsdAJe.yyjyJ9RLuZ/9XnYkR5qhiB.T1gQnphrt0PmnWLsO', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:19.971181', 0, None, '2025-06-07 04:06:19.971190', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderStatusManagement" name="test_cancel_order_invalid_status" time="0.352"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269180851231, 'test@example.com', '$2b$12$u1NKm0BumcNYhY1NrFiJe.P4JX4ZiOdy5505loqP5YRwLNI5efwVa', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:20.827389', 0, None, '2025-06-07 04:06:20.827398', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269180851231, 'test@example.com', '$2b$12$u1NKm0BumcNYhY1NrFiJe.P4JX4ZiOdy5505loqP5YRwLNI5efwVa', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:20.827389', 0, None, '2025-06-07 04:06:20.827398', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderFiltering" name="test_filter_orders_by_status" time="0.350"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269181795648, 'test@example.com', '$2b$12$9/WR2MntML8.8rV6UK5W..mMOpqj7N.XQYG5kc7GtnFYF7FlDk1G2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:21.712820', 0, None, '2025-06-07 04:06:21.712830', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269181795648, 'test@example.com', '$2b$12$9/WR2MntML8.8rV6UK5W..mMOpqj7N.XQYG5kc7GtnFYF7FlDk1G2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:21.712820', 0, None, '2025-06-07 04:06:21.712830', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderFiltering" name="test_filter_orders_by_date_range" time="0.350"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269182963375, 'test@example.com', '$2b$12$uz6iirfpAv9Skq8urAqjbOKf9C5BDBBOFKCCCdJNltPWiQ7aGsjy2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:22.570918', 0, None, '2025-06-07 04:06:22.570928', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269182963375, 'test@example.com', '$2b$12$uz6iirfpAv9Skq8urAqjbOKf9C5BDBBOFKCCCdJNltPWiQ7aGsjy2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:22.570918', 0, None, '2025-06-07 04:06:22.570928', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderFiltering" name="test_search_orders_by_order_number" time="0.350"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269183463206, 'test@example.com', '$2b$12$MXYde85qEreDPI16IG8BJedaD.XBr9Z.eGm6CebtRop8E3dplyNZ2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:23.447767', 0, None, '2025-06-07 04:06:23.447776', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269183463206, 'test@example.com', '$2b$12$MXYde85qEreDPI16IG8BJedaD.XBr9Z.eGm6CebtRop8E3dplyNZ2', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:23.447767', 0, None, '2025-06-07 04:06:23.447776', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderFiltering" name="test_get_orders_by_supplier" time="0.001"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py, line 411&#10;      def test_get_orders_by_supplier(self, client: TestClient, supplier_auth_headers: dict, test_order: Order):&#10;E       fixture 'supplier_auth_headers' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_order, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py:411&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py, line 411
      def test_get_orders_by_supplier(self, client: TestClient, supplier_auth_headers: dict, test_order: Order):
E       fixture 'supplier_auth_headers' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_order, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_orders.py:411</error></testcase><testcase classname="tests.test_orders.TestOrderPayment" name="test_create_payment" time="0.350"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269183528188, 'test@example.com', '$2b$12$R4umQKt12qarioevXe4jcuYsVj.FG6IJPGVyZv4z0xReoljO0qw9y', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:24.307572', 0, None, '2025-06-07 04:06:24.307581', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269183528188, 'test@example.com', '$2b$12$R4umQKt12qarioevXe4jcuYsVj.FG6IJPGVyZv4z0xReoljO0qw9y', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:24.307572', 0, None, '2025-06-07 04:06:24.307581', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderPayment" name="test_payment_callback" time="0.349"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269184213593, 'test@example.com', '$2b$12$iem68T8av0kdMWMLiTvHxO7N3axbywKKxAInG2cJBy1WbjxPlowXe', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:25.199884', 0, None, '2025-06-07 04:06:25.199892', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269184213593, 'test@example.com', '$2b$12$iem68T8av0kdMWMLiTvHxO7N3axbywKKxAInG2cJBy1WbjxPlowXe', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:25.199884', 0, None, '2025-06-07 04:06:25.199892', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderPayment" name="test_get_payment_status" time="0.349"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269185804940, 'test@example.com', '$2b$12$u7utbYFlGcRXA1yWarQtH.Jpf4IiX30PyiO00mgxgIG5LnOLUOYkK', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:26.054435', 0, None, '2025-06-07 04:06:26.054444', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269185804940, 'test@example.com', '$2b$12$u7utbYFlGcRXA1yWarQtH.Jpf4IiX30PyiO00mgxgIG5LnOLUOYkK', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:26.054435', 0, None, '2025-06-07 04:06:26.054444', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderValidation" name="test_create_order_missing_delivery_address" time="0.352"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269186420212, 'test@example.com', '$2b$12$Ac9ofpObKFCLYe2DYAn8JeXAlQuYqg1i1OPgfWy1ArNrwqOeqVrEi', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:26.908265', 0, None, '2025-06-07 04:06:26.908274', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269186420212, 'test@example.com', '$2b$12$Ac9ofpObKFCLYe2DYAn8JeXAlQuYqg1i1OPgfWy1ArNrwqOeqVrEi', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:26.908265', 0, None, '2025-06-07 04:06:26.908274', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderValidation" name="test_create_order_empty_items" time="0.366"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269187112702, 'test@example.com', '$2b$12$Cmg9ZaGivLO2B0a945ysXOHVX0MLQ1kQ0dDShO9nTaQ81Md0.4yoG', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:27.827172', 0, None, '2025-06-07 04:06:27.827181', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269187112702, 'test@example.com', '$2b$12$Cmg9ZaGivLO2B0a945ysXOHVX0MLQ1kQ0dDShO9nTaQ81Md0.4yoG', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:27.827172', 0, None, '2025-06-07 04:06:27.827181', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_orders.TestOrderValidation" name="test_update_order_status_unauthorized" time="0.361"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269188164170, 'test@example.com', '$2b$12$y5oungpuoBmdOxZKjjiZVe5G8Pwmx/iTE0ghWVxT8VHhcFzIhNYfW', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:28.698866', 0, None, '2025-06-07 04:06:28.698876', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269188164170, 'test@example.com', '$2b$12$y5oungpuoBmdOxZKjjiZVe5G8Pwmx/iTE0ghWVxT8VHhcFzIhNYfW', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:28.698866', 0, None, '2025-06-07 04:06:28.698876', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_products.TestProductCategories" name="test_get_categories" time="0.010"><failure message="AssertionError: assert 'items' in []">tests/test_products.py:25: in test_get_categories
    assert "items" in data
E   AssertionError: assert 'items' in []</failure></testcase><testcase classname="tests.test_products.TestProductCategories" name="test_get_category_by_slug" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductCategories" name="test_get_category_not_found" time="0.010" /><testcase classname="tests.test_products.TestProductCategories" name="test_create_category_as_admin" time="0.361"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269189804479, 'test@example.com', '$2b$12$xh5Xtr8X/kMu5uSbGC64yuTcUw5WLZP7gjZ/tb6vN2HxBOCcLfGeC', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:29.732910', 0, None, '2025-06-07 04:06:29.732919', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269189804479, 'test@example.com', '$2b$12$xh5Xtr8X/kMu5uSbGC64yuTcUw5WLZP7gjZ/tb6vN2HxBOCcLfGeC', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:29.732910', 0, None, '2025-06-07 04:06:29.732919', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_products.TestProductCategories" name="test_create_category_duplicate_slug" time="0.361"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269190476974, 'test@example.com', '$2b$12$BEIaME4YX0NTaAvvFHdGVeIZAJywKSUwNReGlq.rgj1/vWDbsbXLy', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:30.637073', 0, None, '2025-06-07 04:06:30.637082', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269190476974, 'test@example.com', '$2b$12$BEIaME4YX0NTaAvvFHdGVeIZAJywKSUwNReGlq.rgj1/vWDbsbXLy', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:30.637073', 0, None, '2025-06-07 04:06:30.637082', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_products.TestProductCategories" name="test_create_category_forbidden" time="0.361"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269191255547, 'test@example.com', '$2b$12$ti.ZuX1PZyPXYJAgD8cLjOTxZ0ZR5C2A1WRBsDHK5mdMGF8qSUTly', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:31.507899', 0, None, '2025-06-07 04:06:31.507908', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269191255547, 'test@example.com', '$2b$12$ti.ZuX1PZyPXYJAgD8cLjOTxZ0ZR5C2A1WRBsDHK5mdMGF8qSUTly', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:31.507899', 0, None, '2025-06-07 04:06:31.507908', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_products.TestProductCRUD" name="test_get_products" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductCRUD" name="test_get_products_with_pagination" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductCRUD" name="test_get_product_by_id" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductCRUD" name="test_get_product_not_found" time="0.030" /><testcase classname="tests.test_products.TestProductCRUD" name="test_create_product" time="0.001"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 151&#10;      def test_create_product(self, client: TestClient, supplier_auth_headers: dict, test_category: Category, test_supplier_company: Company):&#10;E       fixture 'supplier_auth_headers' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:151&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 151
      def test_create_product(self, client: TestClient, supplier_auth_headers: dict, test_category: Category, test_supplier_company: Company):
E       fixture 'supplier_auth_headers' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:151</error></testcase><testcase classname="tests.test_products.TestProductCRUD" name="test_create_product_unauthorized" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductCRUD" name="test_update_product" time="0.001"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 199&#10;      def test_update_product(self, client: TestClient, supplier_auth_headers: dict, test_product: Product):&#10;E       fixture 'supplier_auth_headers' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:199&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 199
      def test_update_product(self, client: TestClient, supplier_auth_headers: dict, test_product: Product):
E       fixture 'supplier_auth_headers' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:199</error></testcase><testcase classname="tests.test_products.TestProductCRUD" name="test_delete_product" time="0.001"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 216&#10;      def test_delete_product(self, client: TestClient, supplier_auth_headers: dict, test_product: Product):&#10;E       fixture 'supplier_auth_headers' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:216&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 216
      def test_delete_product(self, client: TestClient, supplier_auth_headers: dict, test_product: Product):
E       fixture 'supplier_auth_headers' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:216</error></testcase><testcase classname="tests.test_products.TestProductFiltering" name="test_filter_by_category_slug" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductFiltering" name="test_filter_by_category_id" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductFiltering" name="test_filter_by_supplier" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductFiltering" name="test_filter_by_price_range" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductFiltering" name="test_filter_by_stock_availability" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductFiltering" name="test_search_products" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductFiltering" name="test_search_products_by_sku" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductFiltering" name="test_search_no_results" time="0.025" /><testcase classname="tests.test_products.TestProductFiltering" name="test_combined_filters" time="0.001"><error message="failed on setup with &quot;TypeError: 'category_code' is an invalid keyword argument for Category&quot;">tests/conftest.py:148: in test_category
    category = Category(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:571: in _initialize_instance
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/decl_base.py:2173: in _declarative_constructor
    raise TypeError(
E   TypeError: 'category_code' is an invalid keyword argument for Category</error></testcase><testcase classname="tests.test_products.TestProductValidation" name="test_create_product_invalid_category" time="0.001"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 347&#10;      def test_create_product_invalid_category(self, client: TestClient, supplier_auth_headers: dict):&#10;E       fixture 'supplier_auth_headers' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:347&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 347
      def test_create_product_invalid_category(self, client: TestClient, supplier_auth_headers: dict):
E       fixture 'supplier_auth_headers' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:347</error></testcase><testcase classname="tests.test_products.TestProductValidation" name="test_create_product_duplicate_sku" time="0.002"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 363&#10;      def test_create_product_duplicate_sku(self, client: TestClient, supplier_auth_headers: dict, test_product: Product, test_category: Category):&#10;E       fixture 'supplier_auth_headers' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:363&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 363
      def test_create_product_duplicate_sku(self, client: TestClient, supplier_auth_headers: dict, test_product: Product, test_category: Category):
E       fixture 'supplier_auth_headers' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:363</error></testcase><testcase classname="tests.test_products.TestProductValidation" name="test_create_product_invalid_price" time="0.001"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 379&#10;      def test_create_product_invalid_price(self, client: TestClient, supplier_auth_headers: dict, test_category: Category):&#10;E       fixture 'supplier_auth_headers' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:379&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 379
      def test_create_product_invalid_price(self, client: TestClient, supplier_auth_headers: dict, test_category: Category):
E       fixture 'supplier_auth_headers' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:379</error></testcase><testcase classname="tests.test_products.TestProductValidation" name="test_create_product_missing_required_fields" time="0.001"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 394&#10;      def test_create_product_missing_required_fields(self, client: TestClient, supplier_auth_headers: dict):&#10;E       fixture 'supplier_auth_headers' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:394&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py, line 394
      def test_create_product_missing_required_fields(self, client: TestClient, supplier_auth_headers: dict):
E       fixture 'supplier_auth_headers' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, db_engine, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_products.py:394</error></testcase><testcase classname="tests.test_utils" name="test_crud_endpoints" time="0.367"><error message="failed on setup with &quot;sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email&#10;[SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]&#10;[parameters: (1749269193631285, 'test@example.com', '$2b$12$Ih0PYyYGZedRqH92ba7WI.COpxt4evcQk1qcgLdmlXqQ6Vr1n2Pxy', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:33.948623', 0, None, '2025-06-07 04:06:33.948632', None)]&#10;(Background on this error at: https://sqlalche.me/e/20/gkpj)&quot;">../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.IntegrityError: UNIQUE constraint failed: users.email

The above exception was the direct cause of the following exception:
tests/conftest.py:80: in test_user
    db_session.commit()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2032: in commit
    trans.commit(_to_root=True)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1313: in commit
    self._prepare_impl()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py:139: in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:1288: in _prepare_impl
    self.session.flush()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4345: in flush
    self._flush(objects)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4480: in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py:4441: in _flush
    flush_context.execute()
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:466: in execute
    rec.execute(self)
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/unitofwork.py:642: in execute
    util.preloaded.orm_persistence.save_obj(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:93: in save_obj
    _emit_insert_statements(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/persistence.py:1233: in _emit_insert_statements
    result = connection.execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1415: in execute
    return meth(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1637: in _execute_clauseelement
    ret = self._execute_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1842: in _execute_context
    return self._exec_single_context(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1982: in _exec_single_context
    self._handle_dbapi_exception(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2351: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1963: in _exec_single_context
    self.dialect.do_execute(
../../miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/default.py:943: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: users.email
E   [SQL: INSERT INTO users (id, email, hashed_password, full_name, phone, is_active, is_superuser, auth_provider, provider_id, email_verified_at, failed_login_attempts, locked_until, password_changed_at, default_company_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) RETURNING created_at, updated_at]
E   [parameters: (1749269193631285, 'test@example.com', '$2b$12$Ih0PYyYGZedRqH92ba7WI.COpxt4evcQk1qcgLdmlXqQ6Vr1n2Pxy', 'Test User', '+1-416-555-0001', 1, 0, 'email', None, '2025-06-07 04:06:33.948623', 0, None, '2025-06-07 04:06:33.948632', None)]
E   (Background on this error at: https://sqlalche.me/e/20/gkpj)</error></testcase><testcase classname="tests.test_utils" name="test_unauthorized_endpoints" time="0.080"><error message="failed on setup with &quot;file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_utils.py, line 449&#10;  def test_unauthorized_endpoints(&#10;E       fixture 'endpoints' not found&#10;&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, api_helper, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, data_factory, db_engine, db_helper, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_services, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/home/mli/ai_playground/tigu_backend_fastapi/tests/test_utils.py:449&quot;">file /home/mli/ai_playground/tigu_backend_fastapi/tests/test_utils.py, line 449
  def test_unauthorized_endpoints(
E       fixture 'endpoints' not found
&gt;       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, admin_auth_headers, anyio_backend, anyio_backend_name, anyio_backend_options, api_helper, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, client, cov, data_factory, db_engine, db_helper, db_session, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_services, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_admin_user, test_category, test_company, test_product, test_supplier_company, test_user, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/home/mli/ai_playground/tigu_backend_fastapi/tests/test_utils.py:449</error></testcase></testsuite></testsuites>